var multer = require('multer');
var express = require('express');
var fs = require('fs');
var path = require('path');
var app = express();

var rootPath;
process.argv.forEach(function (val, index, array) {
  if(index==2)
    rootPath = val;
});

app.use(function(req, res, next) {
  res.header('Access-Control-Allow-Origin', req.headers.origin || "*");
  res.header('Access-Control-Allow-Methods', 'GET,POST,PUT,HEAD,DELETE,OPTIONS');
  res.header('Access-Control-Allow-Headers', 'content-Type,x-requested-with');

  next();
});

app.use('/', express.static('public'));

app.get('/',function(req,res){
    res.sendFile(__dirname+'/index.html');
});

app.use('/static',express.static(rootPath));

app.get('/api/filesDirs',function(req,res){

    var p = req.query.path;
    if(!p)
        p = rootPath;

   
    var stats = fs.lstatSync(p);
    if(stats.isDirectory()){
        fs.readdir(p, (err, files) => {
            var fileArr = [];
            var folderArr = [];
            files = files.filter(item => !(/(^|\/)\.[^\/\.]/g).test(item));
            files.forEach(file => {
                try{
                    var filePath = path.join(p,file);
                    stats = fs.lstatSync(filePath);
                    if(stats.isFile()){
                        fileArr.push(filePath);
                    }
                    if(stats.isDirectory()){
                        folderArr.push(filePath);
                    }
                }catch(err){
                
                }
            });
            
            res.json(
                {
                    files:fileArr,
                    folders:folderArr
                }
            );
        });
    }
});

app.post('/api/upload',function(req,res){

});

app.get('/',function(req,res){
    res.send('yo');
});


var port = 8080;

app.listen(port,function(){
    console.log('listening to '+ port);
});